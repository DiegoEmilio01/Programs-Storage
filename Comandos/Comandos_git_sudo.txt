- SUBIR CAMBIOS AL REPO ORIGINAL:

git status			# Verificar el estado. (gs)
git add --all			# Agregar todo lo nuevo a "querer cambiarlo". (ga)
git commit -m "mensaje"		# Generar el commit y confirmar los cambios con su respectivo mensaje. (gc "mensaje")
git push			# Enviar los cambios al repositorio en GitHub. (gp)



- GIT BRANCHES

git checkout -b new_branch	# Crea nueva branch. (gh -b)
git checkout branch		# Cambiarse de branch.
git branch			# Ver todas las branches. (gb)
git branch -d branch		# Eliminar branch.
git push origin branch		# ga, gc y despues este comando para pushear la branch. En github hay que hacer el pull request y el merge.


- REVERTIR un commit y que no está el historial (borrar todo el comtenido de ese comando):

git filter-branch -f
git reset HEAD^ --hard
git push -f


- REVERTIR un commit:

git revert <commit hash>


- ACTUALIZAR el repo a un estado anterior de un commit pasado:

git checkout <commit hash>


- MERGE:

git stash
git pull
git stash pop


- EXTENSIONES DE VSCODE

code --list-extensions | xargs -L 1 echo code --install-extension


- INSTALAR UN .DEB

sudo dpkg -i package_file.deb


- CONFIGURACION TERMINAL

echo -e "\033[0;35m ¡Bienvenido, Diego!"

alias profile="nano ~/.bash_profile" o "nano ~/.bashrc"
alias sprofile="source ~/.bash_profile"
alias ga="git add --all"
alias gc="git commit -m"
alias gp="git push"
alias gs="git status"
alias gb="git branch"
alias gh="git checkout"
alias jl="python3 -m jupyterlab"
alias e="exit"
alias hib="sudo hibernate"
alias r="ruby"
alias psql="sudo su - postgres"


export PS1="\[\033[0;36m\]\u \[\033[0;32m\]\w \[\033[0;37m\]>> "