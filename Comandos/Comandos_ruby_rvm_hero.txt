- RUBY VERSION MANAGER comandos útiles:

• rvm get stable		# Actualiza RVM
• rvm list			# lista versiones de Ruby instaladas localmente
• rvm list known		# lista todas las versiones de Ruby disponibles para descargar
• rvm install [version]		# instala versión especificada de Ruby • e.g: rvm install 2.6.3
• rvm use [version]		# cambia versión de Ruby usada por el sistema
• rvm --default use [version]   # cambia la versión default


RAILS

gem install -v 5.2.4.2				# Instala version de rails
gem 'pg'					# Escribir en Gemfile. Sirve para compatibilidad con psql.
rails -v					# Versión de rails
bundle install					# Instala gemas del Gemfile (ejecutar dentro del directorio del proyecto).
rails new app -d postgresql			# Crea app utilizando psql como modelo. Hey que hacer las config/database.yml de la bd creada en psql.
rails generate controller nombre accion1 ...	# Las acciones son opcionales, crea un controlador.
rails generate model nombre atributo_1:tipo ... # Crea una tabla en nuestra bbdd.
rails server					# Levanta el server para correr la app (ejecutar dentro de la carpeta).


HEROKU (ejecutar dentro del repositorio de github)

LLamar al repo como la app, copiar carpetas dentro, crear el procfile, crear heroku, setear lenguaje, pushear a heroku.

heroku login				# Chequear instalación e iniciar sesión desde el browser.
heroku create				# Crear app en heroku.
heroku open				# Abre el link de la app en heroku.
heroku logs --tail			# Ve los logs recibidos por la app.
heroku buildpacks:set heroku/ruby	# Set el lenguaje de la app.
git push heroku master			# Pushear a heroku.
heroku local web			# Corre la app localmente (tambien se puede con el server de rails).


RUBOCOP

https://github.com/rubocop-hq/rubocop
